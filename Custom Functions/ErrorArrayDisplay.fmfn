 /*
 *  CUSTOM FUNCTION
 *    ErrorArrayDisplay ( errorArray )
 *
 *  DESCRIPTION
 *	  Returns human readable error information based on the data generated by the ErrorAppend CF
 *
 *  PARAMS
 *    errorArray: The array of error information generated by ErrorAppend
 *
 *  RETURNS
 *    String
 *
 *  DEPENDENCIES
 *    ErrorAppend
 *
 *  CHANGELOG
 *    2023-06-28: Paul McCudden: Created
 *    2024-12-12: Paul McCudden: Updated name to distinguish between other error methods
 *
*/

While (
    [
        ~isArray = JSONGetElementType ( errorArray ; "" ) = JSONArray;
        ~indexCount = ValueCount ( JSONListKeys ( errorArray; "" ) );
        ~i = 0;
        ~message = ""
    ];

    ~isArray and ~i < ~indexCount;

    [
        ~i = ~i + 1;
        ~thisErrorObject = JSONGetElement ( errorArray; "[" & ~i - 1 & "]");
        ~code = JSONGetElement ( ~thisErrorObject; "errorCode" );
        ~description = JSONGetElement ( ~thisErrorObject; "errorDescription" );
        ~info = JSONGetElement ( ~thisErrorObject; "errorInfo" );
        ~message = If ( ~i > 1; ~message & ¶ ) & 
            Trim (
                If ( not IsEmpty ( ~info ) and ~info <> "?"; ~info & If ( Right ( ~info; 1 ) <> "."; ".") & " " ) &
                If ( not IsEmpty ( ~description ) and ~description <> "?"; ~description & " " ) &
                If ( not IsEmpty ( ~code ) and ~code <> "?"; "(Error " & ~code & ")" )
            )
    ];

    Case (
        not ~isArray; "? * Cannot parse non-array data";
        ValueCount ( ~message ) > 1; "Error Messages:¶" & "  -" & Substitute ( ~message; ¶; "¶  -" );
        ~message
    )

)
