/*
 *  CUSTOM FUNCTION
 *    ExtractFromTextBlock ( fullText; startString; endString; occurrence; includeStrings )
 *
 *  DESCRIPTION
 *    Used for when you want to get a block of text from a larger block of text where you know the start and end
 *
 *  PARAMS
 *    fullText: The full block of text
 *    startString: The unique string that starts the block you want to get
 *    endString: The inque string the ends the block you want to get. If endString is empty, gets the rest of the text.
 *    occurrence: The occurrence number of this to grab, default is 1
 *    includeStrings: True to include the startString and endString in the return text
 *
 *  RETURNS
 *    Text
 *
 *  DEPENDENCIES
 *    --None--
 *
 *  CHANGELOG
 *    2022-03-30: Paul McCudden (paul@peak14.solutions): Created
 *    2023-08-28: Paul McCudden: Updated to pull all text if endString is empty
 *    2023-11-22: Paul McCudden: Added includeStrings
 *    2024-05-02: Paul McCudden: Added in case where IsEmpty ( startString )
 *    2025-01-28: Paul McCudden: Added occurrence and set to return empty string if no startString found.
 *    2025-02-25: Paul McCudden: Fixed bug where was returning wrong value when dealing with end of strings
*/

Let (
    [
        ~includeStrings = includeStrings;
        ~occurrence = If ( GetAsNumber ( occurrence ) < 1; 1; GetAsNumber ( occurrence ) );
        ~startPosition = If ( IsEmpty ( startString ); 1; Position ( fullText; startString; 1; ~occurrence ) );
        ~endPosition = If ( IsEmpty ( endString ); Length ( fullText ) + 1; Position ( fullText; endString; ~startPosition + Length ( startString ); 1 ) );

		// Adjust the start and end positions to add or remove the match strings
		~startPosition = If ( ~includeStrings; ~startPosition; ~startPosition + Length ( startString ) );
		~endPosition = If ( ~includeStrings; ~endPosition + Length ( endString ); ~endPosition )
    ];


    If (
        ~startPosition = 0; "";
        Middle (
            fullText;
            ~startPosition;
            ~endPosition - ~startPosition
        )
    )

)