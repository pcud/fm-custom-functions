/*
 *  CUSTOM FUNCTION
 *    FormatFriendlyTimestamp ( theTimestamp; isUTC )
 *
 *  DESCRIPTION
 *    Formats a timestamp to display in a user friendly way. Follows the macOS convention used in the Finder for "Date Modified"
 *
 *  PARAMS
 *    theTimestamp: The timestamp to format
 *    isUTC: True if the timestamp is in UTC time and should be converted to the local time zone
 *
 *  RETURNS
 *    Text
 *
 *  DEPENDENCIES
 *    ConvertUTCtoLocalTimestamp: https://github.com/pcud/fm-custom-functions/blob/master/Custom%20Functions/ConvertUTCtoLocalTime.fmfn
 *    GetCurrentUTCTimestamp: https://github.com/pcud/fm-custom-functions/blob/master/Custom%20Functions/GetCurrentUTCTimestamp.fmfn
 *
 *  CHANGELOG
 *    2023-07-06: Paul McCudden: Created
 *    2023-08-29: Paul McCudden: Added get as timestamp to force typing
 *    2024-02-22: Paul McCudden: Updated to auto detect if this is just a time or if it's just a date and format properly and update issue where days could calculate incorrect if UTC was next day
 *
*/

Let (
	[
		~now = Case (
			isUTC; GetCurrentUTCTimestamp;
			LeftWords ( Get ( HostApplicationVersion ); 1 ) = "Server"; Get ( CurrentHostTimestamp ); // Get host timestamp if hosted
			Get ( CurrentTimestamp )
		);

		~timestamp = GetAsTimestamp ( theTimestamp );
		~isOnlyDate = GetAsDate ( ~timestamp ) = ~timestamp;
		~isOnlyTime = GetAsNumber ( GetAsTime ( ~timestamp ) ) = GetAsNumber ( GetAsTimestamp ( ~timestamp ) );
		~timestamp = Case (
			IsEmpty ( ~timestamp ) or ~timestamp = "?"; "";
			isUTC; ConvertUTCtoLocalTimestamp ( ~timestamp );
			~timestamp
		);
		~utcDayOffset = If ( isUTC; GetAsDate ( GetCurrentUTCTimestamp ) - Get ( CurrentDate ) );
		~days = Int ( ~now / 86400 ) - Int ( ~timestamp / 86400 ) - ~utcDayOffset;
		~dayName = DayName ( ~timestamp );
		~dateFormatted = Case (
			~days < -1 and ~days > -8; "This upcoming " & ~dayName;
			~days = -1; "Tomorrow";
			~days = 0; "Today";
			~days = 1; "Yesterday";
			~days > 1 and ~days < 7 ; "This past " & ~dayName;
			MonthName ( ~timestamp ) & " " & Day ( ~timestamp ) & If ( Year ( ~timestamp ) <> Year ( ~now ); ", " & Year ( ~timestamp ) )
		);
		~timeFormatted = If ( Hour ( ~timestamp ) > 12 ; Hour ( ~timestamp ) - 12 ; Hour ( ~timestamp ) ) & ":" & Right ( "00" & Minute ( ~timestamp ); 2 ) & " " & Choose ( Int ( Hour ( ~timestamp ) / 12 ); "AM"; "PM" )
		
	];

	If ( not ~isOnlyTime; ~dateFormatted ) & 
	If ( not ( ~isOnlyDate or ~isOnlyTime ); " at " ) & 
	If ( not ~isOnlyDate; ~timeFormatted )

)